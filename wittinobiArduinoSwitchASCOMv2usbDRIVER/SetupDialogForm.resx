<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEACABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAGAAAAAwEBAAQECQAGBQUABQUHAAsFBQAGBgcAAgYNABEJCQAHCBIAEgoJABIKCgAUCgoAEgsKABML
        CwAOChMAFQ0LABYNCwAACCQAFg0MABYODQAODBcAGA4NABcPDAAaEQ8AEBAZABoSEAAbEhAAHRMRAB8U
        EgADDjMAHxYTAB8WFAAdFhUAHRcVAA8SKwAEDzoAHhgVABoXGgAfGBYAIxgXACUZFQAkGRYAHhoWACUZ
        GAARFioAIhoYACUaFwAmGhgAIxkdABQXLAAhHBkAFRcxACodHAAiHhwAJx8ZACQfHQATGTcAGhozACMg
        HAAlIB0AFBg/ACUhHgAeHisAJyEeAB4cMgAuIR4AGB4zACYjHgAkIyAAJB4yADAiIgApIC4AMSUdACol
        IQAlIzAALCgkABgfTAAwJysAOiglADsoJQAvKSYANikkADgoKAA7KSUAPikmADErJAAeI0cAGyJQADYs
        JgBEKyYAPispAEErKAAxKTUAQCwoAEAsKQBCLSgAQy0pAEEtKgBILSoAGiRZAEAuKwAjKEwAQS8tADww
        LgAbJWEAQzAvADEtQgBFMS8ARjEvAEUxMgBCMjAAIitTAEsyMQAqNTMAIipdADM1MwAeKWMALS9OAEk1
        MgAgKmUADTFUAEo1MwA/NjQAICxhAEs2NQBJNzMASjg3AEs4OABMODkAPDo5ACYyYgAwN04ATzo6AFE6
        OwAoMmUAWD0yAFA7PABGPD0ATj09AFQ9PABVPjsAVT86AEc/PwBCQUEAITV1ADc9VgBVQzsAWkI/ADs+
        XQBTREQAXERFAF5HPQBXR0QATkhJADNGWgBVR04AWUhNAFtLRwBIR1sAUUtMAGNLSABgTEsATExZAFtM
        VwBjUEgAL0xoAHZUOwBdUVIAY1FTAE5QXgBxUVIAYVNTAH9WPwBmVFUAZ1VUAFpVWgBtVlUAdFdRAGZY
        UwBkV1gAUVJ4AGVZXABeWWAAbFpcAG1cVgBrW2MAXFd3AHJeXABxX2AAcWFgAHVhXwBWY2cAZl14AEVh
        eAAjZIEAXWVvAHpmYgB2aGsAe2lmAH1raQB3bG8Ahm9nAIBvbACAcXMAg3JvAHVxegCGc3UAiHVxAJF2
        bgCHdXcAe3h8AI55dwARdbEAQXehAJJ+eQCTfnoAlYB5AJiAewBLgJ4Aa4WGAKaLeACYiIcAmomEAJ+K
        ggBzg7gAn42LAKOPiQA7k6MAqZOKAHiTnACjl4sAsZiQAB2ZwQBplL0AspuTALCblAAdm8sAlZqoALWd
        lACqnp4AwKKMAK6imwDAp58AxambAMCpoQDDqqAAxKugAIOn0ADLsqkAzbWtAHe29QB/4PoAAAAAAAAA
        AAAAAAAArLi/vK+Wb09UW19cWmNxhr7I1NjFnn5IOlNeUFVheonH0ODo2bmTRiQjXWdibYCBy9fl9+/K
        pc4xEh5rjnd/hc3f6/n10efhS0kZQamZbH3S4uz69t3yfE4FAg/CxJSMzN7j8/Txt1cVEwEHpsmyocbP
        2vDuqjI0BBcAA5/Bu7W2vZzD7dV5LQY1Zodp1vz7mqidm+nkcjkJYKuNiOb4upCgtLHA3JVzPVmnKdvq
        pJd0go+u06N2dU2irZiLZWpuRUxRe4qSg3hYsLNSLypCRzZEPkpWhJFkcGgvGxgdLDA7ODM8QDc/QyYc
        GBARGy4oKyUiJyEaFA0KDA4ICxYgHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>